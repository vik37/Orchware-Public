
services:

  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: psgDemo123#
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 5s
      retries: 10
      start_period: 10s

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: psgDemo123#
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
    depends_on:
      keycloak-db:
        condition: service_healthy
    ports:
      - "8080:8080"

  seq:
    image: datalust/seq:latest
    container_name: seq
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=admin
      - SEQ_RETENTIONPOLICIES__DEFAULTRETENTIONDAYS=7
    volumes:
      - seq-data:/data
    restart: unless-stopped
  
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./observ-conf/tempo.yml:/etc/tempo.yml
    ports:
      - "3200:3200"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observ-conf/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - '--storage.tsdb.retention.time=7d'
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./observ-conf/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - tempo
      - prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - tempo
      - prometheus
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  orchware.frontoffice.api:
    image: ${DOCKER_REGISTRY-}orchwarefrontofficeapi:latest
    container_name: orchware.frontoffice.api
    build:
      context: .
      dockerfile: src/Frontoffice/Orchware.Frontoffice.API/Dockerfile
    depends_on:
      - mssql
      - otel-collector
      - prometheus
      - tempo
      - keycloak
      - redis
    restart: always
    ports:
      - "5050:5050"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5050
      - ConnectionStrings__MSSQLDbConnection=Server=mssql;Database=FrontOfficeDb;User Id=sa;Password=Test123#;TrustServerCertificate=True;MultipleActiveResultSets=True
      - Authentication__MetadataAudience=http://keycloak:8080/realms/orchware-dev/.well-known/openid-configuration
      - RedisConnection__RedisPort=redis:6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  orchware.backoffice.api:
    image: ${DOCKER_REGISTRY-}orchwarebackofficeapi:latest
    container_name: orchware.backoffice.api
    build:
      context: .
      dockerfile: src/Backoffice/Orchware.Backoffice.API/Dockerfile
    depends_on:
      - mssql
      - otel-collector
      - prometheus
      - tempo
      - keycloak
    restart: always
    ports:
      - "4040:4040"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=4040
      - ConnectionStrings__MSSQLDbConnection=Server=mssql;Database=BackOfficeDb;User Id=sa;Password=Test123#;TrustServerCertificate=True;MultipleActiveResultSets=True
      - Authentication__ClientSecrets=qPVmMbZAweudUsbfBxWNUJ2TvPdBDJ47
      - Authentication__MetadataAudience=http://keycloak:8080/realms/orchware-dev/.well-known/openid-configuration
    volumes:
      - ./src/Backoffice/Orchware.Backoffice.Infrastructure/Persistence/SeedFiles/Shelf.csv:/app/Persistence/SeedFiles/Shelf.csv
      - ./src/Backoffice/Orchware.Backoffice.Infrastructure/Persistence/SeedFiles/Product.csv:/app/Persistence/SeedFiles/Product.csv
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4040/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Test123#
    volumes:
      - mssqldata:/var/opt/mssql

volumes:
  mssqldata:
  seq-data:
  grafana-storage:
  keycloak_db_data:  