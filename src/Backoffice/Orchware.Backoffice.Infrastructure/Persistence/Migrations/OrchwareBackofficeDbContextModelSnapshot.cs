// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orchware.Backoffice.Infrastructure.Persistence;

#nullable disable

namespace Orchware.Backoffice.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(OrchwareBackofficeDbContext))]
    partial class OrchwareBackofficeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Inventory.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AvailableQuantity")
                        .HasColumnType("real")
                        .HasColumnOrder(4);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(8);

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(550)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(5);

                    b.Property<int>("ShelfId")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("ShelfId");

                    b.ToTable("Product", "inventory");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Inventory.Shelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("SeasonalFruits")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("SeasonalFruits")
                        .HasDatabaseName("IX_SeasonalFruits");

                    b.ToTable("Shelf", "inventory");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(5);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(4);

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(11);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("Order", "order");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Orders.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(5);

                    b.Property<string>("Products")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<float>("Quantity")
                        .HasColumnType("real")
                        .HasColumnOrder(4);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(7);

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails", "order");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Shipping.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1)
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Shipment", "shipping");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Inventory.Product", b =>
                {
                    b.HasOne("Orchware.Backoffice.Domain.Entities.Inventory.Shelf", "Shelf")
                        .WithMany("Products")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Orders.Order", b =>
                {
                    b.OwnsOne("Orchware.Backoffice.Domain.Entities.Orders.Company", "Company", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Buyer")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CompanyAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CompanyEmail")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("JobTitle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PersonalEmail")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Order", "order");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Company")
                        .IsRequired();
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Orders.OrderDetails", b =>
                {
                    b.HasOne("Orchware.Backoffice.Domain.Entities.Orders.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Inventory.Shelf", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Orchware.Backoffice.Domain.Entities.Orders.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
